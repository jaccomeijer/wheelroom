import { WrSystemConfig } from './types'

export const wrSystemConfig: WrSystemConfig = {
  ignoreProperties: ['children'],
  propertyAliases: {
    bg: ['backgroundColor'],
    h: ['height'],
    m: ['marginTop', 'marginRight', 'marginBottom', 'marginLeft'],
    margin: ['marginTop', 'marginRight', 'marginBottom', 'marginLeft'],
    mb: ['marginBottom'],
    ml: ['marginLeft'],
    mr: ['marginRight'],
    mt: ['marginTop'],
    mx: ['marginRight', 'marginLeft'],
    my: ['marginTop', 'marginBottom'],
    p: ['paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft'],
    padding: ['paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft'],
    pb: ['paddingBottom'],
    pl: ['paddingLeft'],
    pr: ['paddingRight'],
    pt: ['paddingTop'],
    px: ['paddingRight', 'paddingLeft'],
    py: ['paddingTop', 'paddingBottom'],
    w: ['width'],
  },
  responsiveProperties: [
    'alignContent',
    'alignItems',
    'alignSelf',
    'backgroundColor',
    'borderBottom',
    'borderLeft',
    'borderRadius',
    'borderRight',
    'borderTop',
    'bottom',
    'color',
    'display',
    'flexDirection',
    'fontSize',
    'fontWeight',
    'height',
    'justifyContent',
    'justifyItems',
    'justifySelf',
    'left',
    'lineHeight',
    'marginBottom',
    'marginLeft',
    'marginRight',
    'marginTop',
    'maxWidth',
    'opacity',
    'order',
    'paddingBottom',
    'paddingLeft',
    'paddingRight',
    'paddingTop',
    'placeItems',
    'placeSelf',
    'right',
    'textAlign',
    'top',
    'transform',
    'visibility',
    'width',
    // Grid
    'grid',
    'gridArea',
    'gridAutoColumns',
    'gridAutoFlow',
    'gridAutoRows',
    'gridColumn',
    'gridColumnEnd',
    'gridColumnGap',
    'gridColumnStart',
    'gridGap',
    'gridRow',
    'gridRowEnd',
    'gridRowGap',
    'gridRowStart',
    'gridTemplate',
    'gridTemplateAreas',
    'gridTemplateColumns',
    'gridTemplateRows',
    // New standard
    'columnGap',
    'gap',
    'rowGap',
  ],
  scales: {
    fontSizeScale: ['fontSize'],
    fontWeightScale: ['fontWeight'],
    lineHeightScale: ['lineHeight'],
    spaceScale: [
      'bottom',
      'left',
      'marginBottom',
      'marginLeft',
      'marginRight',
      'marginTop',
      'paddingBottom',
      'paddingLeft',
      'paddingRight',
      'paddingTop',
      'right',
      'top',
      // Grid
      'grid',
      'gridArea',
      'gridAutoColumns',
      'gridAutoFlow',
      'gridAutoRows',
      'gridColumn',
      'gridColumnEnd',
      'gridColumnGap',
      'gridColumnStart',
      'gridGap',
      'gridRow',
      'gridRowEnd',
      'gridRowGap',
      'gridRowStart',
      'gridTemplate',
      'gridTemplateAreas',
      'gridTemplateColumns',
      'gridTemplateRows',
      // New standard
      'columnGap',
      'gap',
      'rowGap',
    ],
  },
  initialZeroScales: ['fontSizeScale', 'fontWeightScale', 'lineHeightScale'],
  stringMaps: {
    colorMap: [
      'backgroundColor',
      'borderBottomColor',
      'borderColor',
      'borderLeftColor',
      'borderRightColor',
      'borderTopColor',
      'caretColor',
      'color',
      'fill',
      'columnRuleColor',
      'outlineColor',
      'textDecorationColor',
    ],
    fontMap: ['fontFamily'],
  },
  units: {
    percent: [
      'bottom',
      'left',
      'right',
      'top',
      'height',
      'width',
      'maxWidth',
      'minWidth',
      'maxHeight',
      'minHeight',
    ],
    px: [
      'fontSize',
      'marginBottom',
      'marginLeft',
      'marginRight',
      'marginTop',
      'paddingBottom',
      'paddingLeft',
      'paddingRight',
      'paddingTop',
    ],
  },
}
