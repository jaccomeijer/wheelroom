// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Command create boilerplate should call wheelroom.writeFiles correctly 1`] = `
Array [
  Array [
    Object {
      "dryRun": true,
      "fileList": Array [
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component
 *
 * Component type: firstSection
 *
 */

import React from 'react'
import { getVariation } from '../../lib/get-variation'
import { FluidImage } from '../../views/image/image'
import { SectionProps } from '../../sections/section-props'
import { FirstSectionLargeItemsVar } from './first-section-large-items-var'
import { FirstSectionSmallItemsVar } from './first-section-small-items-var'

const componentList = {
  ['large items']: FirstSectionLargeItemsVar,
  ['small items']: FirstSectionSmallItemsVar,
}

export interface FirstSectionProps extends SectionProps {
  /** Gatsby fetched data */
  __typename: string
  defaultField: string
  title: string
  variation: string
}

export const FirstSection = (props: FirstSectionProps) => {
  const Variation = getVariation(props, componentList)

  return <Variation {...props} />
}
",
          "relPath": "first-section/first-section.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component
 *
 * Component type: noFragment
 *
 */

import React from 'react'
import { getVariation } from '../../lib/get-variation'
import { FluidImage } from '../../views/image/image'
import { SectionProps } from '../../sections/section-props'
import { NoFragmentSingleVar } from './no-fragment-single-var'

const componentList = {
  ['single']: NoFragmentSingleVar,
}

export interface NoFragmentProps extends SectionProps {
  /** Gatsby fetched data */
  __typename: string
  heading: string
  title: string
}

export const NoFragment = (props: NoFragmentProps) => {
  const Variation = getVariation(props, componentList)

  return <Variation {...props} />
}
",
          "relPath": "no-fragment/no-fragment.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component
 *
 * Component type: secondSection
 *
 */

import React from 'react'
import { getVariation } from '../../lib/get-variation'
import { FluidImage } from '../../views/image/image'
import { SectionProps } from '../../sections/section-props'
import { SecondSectionSingleVar } from './second-section-single-var'

const componentList = {
  ['single']: SecondSectionSingleVar,
}

export interface SecondSectionProps extends SectionProps {
  /** Gatsby fetched data */
  __typename: string
  heading: string
  title: string
}

export const SecondSection = (props: SecondSectionProps) => {
  const Variation = getVariation(props, componentList)

  return <Variation {...props} />
}
",
          "relPath": "second-section/second-section.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component variation
 *
 * Component type: firstSection
 * Variation: Large items
 *
 */

import React from 'react'

import { FirstSectionProps } from './first-section'

export const FirstSectionLargeItemsVar = (props: FirstSectionProps) => {
  return (
    <div>
      <h2>FirstSectionLargeItemsVar</h2>
      <p>Hello world</p>
    </div>
  )
}
",
          "relPath": "first-section/first-section-large-items-var.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component variation
 *
 * Component type: firstSection
 * Variation: Small items
 *
 */

import React from 'react'

import { FirstSectionProps } from './first-section'

export const FirstSectionSmallItemsVar = (props: FirstSectionProps) => {
  return (
    <div>
      <h2>FirstSectionSmallItemsVar</h2>
      <p>Hello world</p>
    </div>
  )
}
",
          "relPath": "first-section/first-section-small-items-var.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component variation
 *
 * Component type: noFragment
 * Variation: Single
 *
 */

import React from 'react'

import { NoFragmentProps } from './no-fragment'

export const NoFragmentSingleVar = (props: NoFragmentProps) => {
  return (
    <div>
      <h2>NoFragmentSingleVar</h2>
      <p>Hello world</p>
    </div>
  )
}
",
          "relPath": "no-fragment/no-fragment-single-var.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component variation
 *
 * Component type: secondSection
 * Variation: Single
 *
 */

import React from 'react'

import { SecondSectionProps } from './second-section'

export const SecondSectionSingleVar = (props: SecondSectionProps) => {
  return (
    <div>
      <h2>SecondSectionSingleVar</h2>
      <p>Hello world</p>
    </div>
  )
}
",
          "relPath": "second-section/second-section-single-var.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component index
 *
 * Component type: firstSection
 *
 */

export * from './first-section'
",
          "relPath": "first-section/index.ts",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component index
 *
 * Component type: noFragment
 *
 */

export * from './no-fragment'
",
          "relPath": "no-fragment/index.ts",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component index
 *
 * Component type: secondSection
 *
 */

export * from './second-section'
",
          "relPath": "second-section/index.ts",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component index
 *
 * Component type: allFieldTypes
 *
 */

export * from './all-field-types'
",
          "relPath": "all-field-types/index.ts",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component index
 *
 * Component type: globalModel
 *
 */

export * from './global-model'
",
          "relPath": "global-model/index.ts",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component index
 *
 * Component type: pageModel
 *
 */

export * from './page-model'
",
          "relPath": "page-model/index.ts",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component index
 *
 * Component type: subPageModel
 *
 */

export * from './sub-page-model'
",
          "relPath": "sub-page-model/index.ts",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component interface only
 *
 * Component type: allFieldTypes
 *
 */

import { FluidImage } from '../../views/image/image'

export interface AllFieldTypesProps {
  /** Gatsby fetched data */
  __typename: string
  dateField: string
  dropdownField: string
  imageField: FluidImage
  longTextField: {
    longTextField: string
  }
  multipleComponentsField: any
  numberField: number
  richTextField: {
    json: string
  }
  shortTextField: string
  singleComponentField: any
  tagsField: string[]
  title: string
}
",
          "relPath": "all-field-types/all-field-types.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component interface only
 *
 * Component type: globalModel
 *
 */

import { FluidImage } from '../../views/image/image'

export interface GlobalModelProps {
  /** Gatsby fetched data */
  __typename: string
  heading: string
  title: string
}
",
          "relPath": "global-model/global-model.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component interface only
 *
 * Component type: pageModel
 *
 */

import { FluidImage } from '../../views/image/image'

export interface PageModelProps {
  /** Gatsby fetched data */
  __typename: string
  heading: string
  title: string
}
",
          "relPath": "page-model/page-model.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component interface only
 *
 * Component type: subPageModel
 *
 */

import { FluidImage } from '../../views/image/image'

export interface SubPageModelProps {
  /** Gatsby fetched data */
  __typename: string
  heading: string
  title: string
}
",
          "relPath": "sub-page-model/sub-page-model.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "# First section

\`\`\`jsx
import { FirstSection } from './first-section'
<FirstSection __typename=\\"value\\" defaultField=\\"value\\" title=\\"First section generated from boilerplate\\" variation=\\"large items\\" />
\`\`\`
",
          "relPath": "first-section/README.md",
        },
        Object {
          "basePath": "test-output",
          "content": "# No fragment

\`\`\`jsx
import { NoFragment } from './no-fragment'
<NoFragment __typename=\\"value\\" heading=\\"value\\" title=\\"No fragment generated from boilerplate\\" />
\`\`\`
",
          "relPath": "no-fragment/README.md",
        },
        Object {
          "basePath": "test-output",
          "content": "# Second section

\`\`\`jsx
import { SecondSection } from './second-section'
<SecondSection __typename=\\"value\\" heading=\\"value\\" title=\\"Second section generated from boilerplate\\" />
\`\`\`
",
          "relPath": "second-section/README.md",
        },
      ],
      "yes": true,
    },
  ],
  Array [
    Object {
      "dryRun": false,
      "fileList": Array [
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component
 *
 * Component type: firstSection
 *
 */

import React from 'react'
import { getVariation } from '../../lib/get-variation'
import { FluidImage } from '../../views/image/image'
import { SectionProps } from '../../sections/section-props'
import { FirstSectionLargeItemsVar } from './first-section-large-items-var'
import { FirstSectionSmallItemsVar } from './first-section-small-items-var'

const componentList = {
  ['large items']: FirstSectionLargeItemsVar,
  ['small items']: FirstSectionSmallItemsVar,
}

export interface FirstSectionProps extends SectionProps {
  /** Gatsby fetched data */
  __typename: string
  defaultField: string
  title: string
  variation: string
}

export const FirstSection = (props: FirstSectionProps) => {
  const Variation = getVariation(props, componentList)

  return <Variation {...props} />
}
",
          "relPath": "first-section/first-section.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component
 *
 * Component type: noFragment
 *
 */

import React from 'react'
import { getVariation } from '../../lib/get-variation'
import { FluidImage } from '../../views/image/image'
import { SectionProps } from '../../sections/section-props'
import { NoFragmentSingleVar } from './no-fragment-single-var'

const componentList = {
  ['single']: NoFragmentSingleVar,
}

export interface NoFragmentProps extends SectionProps {
  /** Gatsby fetched data */
  __typename: string
  heading: string
  title: string
}

export const NoFragment = (props: NoFragmentProps) => {
  const Variation = getVariation(props, componentList)

  return <Variation {...props} />
}
",
          "relPath": "no-fragment/no-fragment.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component
 *
 * Component type: secondSection
 *
 */

import React from 'react'
import { getVariation } from '../../lib/get-variation'
import { FluidImage } from '../../views/image/image'
import { SectionProps } from '../../sections/section-props'
import { SecondSectionSingleVar } from './second-section-single-var'

const componentList = {
  ['single']: SecondSectionSingleVar,
}

export interface SecondSectionProps extends SectionProps {
  /** Gatsby fetched data */
  __typename: string
  heading: string
  title: string
}

export const SecondSection = (props: SecondSectionProps) => {
  const Variation = getVariation(props, componentList)

  return <Variation {...props} />
}
",
          "relPath": "second-section/second-section.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component variation
 *
 * Component type: firstSection
 * Variation: Large items
 *
 */

import React from 'react'

import { FirstSectionProps } from './first-section'

export const FirstSectionLargeItemsVar = (props: FirstSectionProps) => {
  return (
    <div>
      <h2>FirstSectionLargeItemsVar</h2>
      <p>Hello world</p>
    </div>
  )
}
",
          "relPath": "first-section/first-section-large-items-var.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component variation
 *
 * Component type: firstSection
 * Variation: Small items
 *
 */

import React from 'react'

import { FirstSectionProps } from './first-section'

export const FirstSectionSmallItemsVar = (props: FirstSectionProps) => {
  return (
    <div>
      <h2>FirstSectionSmallItemsVar</h2>
      <p>Hello world</p>
    </div>
  )
}
",
          "relPath": "first-section/first-section-small-items-var.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component variation
 *
 * Component type: noFragment
 * Variation: Single
 *
 */

import React from 'react'

import { NoFragmentProps } from './no-fragment'

export const NoFragmentSingleVar = (props: NoFragmentProps) => {
  return (
    <div>
      <h2>NoFragmentSingleVar</h2>
      <p>Hello world</p>
    </div>
  )
}
",
          "relPath": "no-fragment/no-fragment-single-var.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component variation
 *
 * Component type: secondSection
 * Variation: Single
 *
 */

import React from 'react'

import { SecondSectionProps } from './second-section'

export const SecondSectionSingleVar = (props: SecondSectionProps) => {
  return (
    <div>
      <h2>SecondSectionSingleVar</h2>
      <p>Hello world</p>
    </div>
  )
}
",
          "relPath": "second-section/second-section-single-var.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component index
 *
 * Component type: firstSection
 *
 */

export * from './first-section'
",
          "relPath": "first-section/index.ts",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component index
 *
 * Component type: noFragment
 *
 */

export * from './no-fragment'
",
          "relPath": "no-fragment/index.ts",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component index
 *
 * Component type: secondSection
 *
 */

export * from './second-section'
",
          "relPath": "second-section/index.ts",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component index
 *
 * Component type: allFieldTypes
 *
 */

export * from './all-field-types'
",
          "relPath": "all-field-types/index.ts",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component index
 *
 * Component type: globalModel
 *
 */

export * from './global-model'
",
          "relPath": "global-model/index.ts",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component index
 *
 * Component type: pageModel
 *
 */

export * from './page-model'
",
          "relPath": "page-model/index.ts",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component index
 *
 * Component type: subPageModel
 *
 */

export * from './sub-page-model'
",
          "relPath": "sub-page-model/index.ts",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component interface only
 *
 * Component type: allFieldTypes
 *
 */

import { FluidImage } from '../../views/image/image'

export interface AllFieldTypesProps {
  /** Gatsby fetched data */
  __typename: string
  dateField: string
  dropdownField: string
  imageField: FluidImage
  longTextField: {
    longTextField: string
  }
  multipleComponentsField: any
  numberField: number
  richTextField: {
    json: string
  }
  shortTextField: string
  singleComponentField: any
  tagsField: string[]
  title: string
}
",
          "relPath": "all-field-types/all-field-types.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component interface only
 *
 * Component type: globalModel
 *
 */

import { FluidImage } from '../../views/image/image'

export interface GlobalModelProps {
  /** Gatsby fetched data */
  __typename: string
  heading: string
  title: string
}
",
          "relPath": "global-model/global-model.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component interface only
 *
 * Component type: pageModel
 *
 */

import { FluidImage } from '../../views/image/image'

export interface PageModelProps {
  /** Gatsby fetched data */
  __typename: string
  heading: string
  title: string
}
",
          "relPath": "page-model/page-model.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "/**
 * Component interface only
 *
 * Component type: subPageModel
 *
 */

import { FluidImage } from '../../views/image/image'

export interface SubPageModelProps {
  /** Gatsby fetched data */
  __typename: string
  heading: string
  title: string
}
",
          "relPath": "sub-page-model/sub-page-model.tsx",
        },
        Object {
          "basePath": "test-output",
          "content": "# First section

\`\`\`jsx
import { FirstSection } from './first-section'
<FirstSection __typename=\\"value\\" defaultField=\\"value\\" title=\\"First section generated from boilerplate\\" variation=\\"large items\\" />
\`\`\`
",
          "relPath": "first-section/README.md",
        },
        Object {
          "basePath": "test-output",
          "content": "# No fragment

\`\`\`jsx
import { NoFragment } from './no-fragment'
<NoFragment __typename=\\"value\\" heading=\\"value\\" title=\\"No fragment generated from boilerplate\\" />
\`\`\`
",
          "relPath": "no-fragment/README.md",
        },
        Object {
          "basePath": "test-output",
          "content": "# Second section

\`\`\`jsx
import { SecondSection } from './second-section'
<SecondSection __typename=\\"value\\" heading=\\"value\\" title=\\"Second section generated from boilerplate\\" />
\`\`\`
",
          "relPath": "second-section/README.md",
        },
      ],
      "yes": true,
    },
  ],
]
`;
